{"version":3,"file":"scroll.service.js","sources":["scroll.service.js"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAEO;AACP;;;;;gDAAsB;AACtB;AACA;AACA;AACA","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar rxjs_1 = require(\"rxjs\");\nvar ScrollService = /** @class */ (function () {\n    function ScrollService() {\n        var _this = this;\n        this.scrollSub = new rxjs_1.Subscription();\n        this.resizeSub = new rxjs_1.Subscription();\n        // set initial value\n        this.manageScrollPos();\n        // create observable that we can subscribe to from component or directive\n        this.scrollObs = typeof window !== 'undefined' ? rxjs_1.fromEvent(window, 'scroll') : rxjs_1.empty();\n        // initiate subscription to update values\n        this.scrollSub = this.scrollObs\n            .subscribe(function () { return _this.manageScrollPos(); });\n        // create observable for changes in screen size\n        this.resizeObs = typeof window !== 'undefined' ? rxjs_1.fromEvent(window, 'resize') : rxjs_1.empty();\n        // initiate subscription to update values\n        this.resizeSub = this.resizeObs\n            .subscribe(function () { return _this.manageScrollPos(); });\n    }\n    ScrollService.prototype.manageScrollPos = function () {\n        // update service property\n        this.pos = typeof window !== 'undefined' ? window.pageYOffset : 0;\n    };\n    ScrollService.prototype.ngOnDestroy = function () {\n        this.scrollSub.unsubscribe();\n        this.resizeSub.unsubscribe();\n    };\n    ScrollService = __decorate([\n        core_1.Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], ScrollService);\n    return ScrollService;\n}());\nexports.ScrollService = ScrollService;\n"]}