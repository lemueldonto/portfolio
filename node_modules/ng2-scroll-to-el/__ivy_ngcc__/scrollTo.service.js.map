{"version":3,"file":"scrollTo.service.js","sources":["../src/scrollTo.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n\nexport class ScrollToService {\n\n    constructor() {}\n\n    public scrollTo(element: string | HTMLElement, duration: number = 500, offset: number = 0): Observable<any> {\n\t\tlet subject: Subject<any> = new Subject<any>();\n        if (typeof element === 'string') {\n            let el = document.querySelector(element as string);\n            this.scrollToElement(el as HTMLElement, duration, offset, subject);\n        }else if (element instanceof HTMLElement) {\n            this.scrollToElement(element, duration, offset, subject);\n        }else {\n\t\t\tsubject.error('I don\\'t find element');\n        }\n        return subject;\n    }\n\n    private scrollToElement(el: HTMLElement, duration: number, offset: number, subject) {\n        if (el) {\n\t\t\tlet viewportOffset = el.getBoundingClientRect();\n\t\t\tlet offsetTop = viewportOffset.top + window.pageYOffset;\n            this.doScrolling(offsetTop + offset, duration, subject);\n        } else {\n        \tsubject.error('I don\\'t find element');\n        }\n        return subject;\n    }\n\n    private doScrolling(elementY, duration, subject: Subject<any>) {\n        const startingY = window.pageYOffset;\n        const diff = elementY - startingY;\n        let start;\n\n        window.requestAnimationFrame(function step(timestamp) {\n            start = (!start) ? timestamp : start;\n\n            const time = timestamp - start;\n            let percent = Math.min(time / duration, 1);\n\n            window.scrollTo(0, startingY + diff * percent);\n\n            if (time < duration) {\n                window.requestAnimationFrame(step);\n                subject.next({});\n            }else {\n            \tsubject.complete();\n\t\t\t}\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}