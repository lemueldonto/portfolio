{"version":3,"file":"paypal-component.d.ts","sources":["paypal-component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ElementRef, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport { PayPalConfig } from '../models/paypal-models';\r\nexport declare class NgxPaypalComponent implements OnChanges, AfterViewInit, OnDestroy {\r\n    /**\r\n     * Configuration for paypal.\r\n     */\r\n    config: PayPalConfig;\r\n    /**\r\n     * Indicates if global configuration (provided via 'forRoot') is used\r\n     */\r\n    useGlobalConfig: boolean;\r\n    /**\r\n     * Container for paypal script\r\n     */\r\n    paypalScriptElem: ElementRef;\r\n    /**\r\n     * Used for indicating delayed rendered if container is not yet ready in DOM\r\n     */\r\n    private registerPayPalScriptWhenContainerIsReady;\r\n    /**\r\n     * Holds current container element\r\n     */\r\n    private _payPalButtonContainerElem?;\r\n    payPalButtonContainerElem: ElementRef;\r\n    /**\r\n     * Polling interval if paypal script is pending\r\n     */\r\n    private readonly defaultPollInterval;\r\n    /**\r\n     * Polling will stop after polling reaches this number\r\n     */\r\n    private readonly maximumPollWaitTime;\r\n    /**\r\n    * Name of the global variable where paypal is stored\r\n    */\r\n    private readonly paypalWindowName;\r\n    /**\r\n     * Name of the global variable indicating that script was initiated (added to page)\r\n     */\r\n    private readonly paypalWindowScriptInitiated;\r\n    /**\r\n     * PayPal integration script url\r\n     */\r\n    private readonly paypalScriptUrl;\r\n    /**\r\n     * Id of the element where PayPal button will be rendered\r\n     */\r\n    payPalButtonContainerId?: string;\r\n    private readonly payPalButtonContainerIdPrefix;\r\n    private readonly ngUnsubscribe;\r\n    constructor();\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    private initPayPal();\r\n    private getPseudoUniqueNumber();\r\n    /**\r\n     * Used when there are multiple paypal components on the same page beacuse only 1 of them\r\n     * may register paypal script. The other has to be polling until paypal is available or component destroyed\r\n     */\r\n    private pollUntilScriptAvailable();\r\n    private addPayPalScriptToPage();\r\n    private handleScriptRegistering();\r\n    private setupScript();\r\n    private getClient();\r\n    private getFunding();\r\n    private mapFundingType(type);\r\n}\r\n"]}