{"version":3,"file":"typing-animation.directive.js","sources":["../typing-animation.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    Directive, OnInit, OnChanges,\n    ElementRef, Input, Output,\n    EventEmitter, SimpleChanges,\n    AfterViewInit, \n} from '@angular/core'\nimport { Typed } from './typed'\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription'\n\n\nexport class TypingAnimationDirective implements OnInit, OnChanges, AfterViewInit {\n    typed: Typed\n     typeSpeed: number = 0\n     startDelay: number = 0\n     condition: boolean = true\n     hideCursorOnComplete: boolean = false\n     complete: EventEmitter<null> = new EventEmitter()\n    typingLock: boolean = false\n    contentObservable: Observable<string>\n    contentSubscription: Subscription\n\n    constructor (private elRef: ElementRef) {}\n\n    ngOnInit () {\n        if (!this.checkContent()) {\n            return\n        }\n\n        this.createTyped()\n    }\n\n    ngAfterViewInit () {\n        if (this.typed) {\n            return\n        }\n\n        if (!this.checkContent()) {\n            this.contentObservable = new Observable((ob) => {\n                if (this.checkContent()) {\n                    ob.next(this.elRef.nativeElement.textContent.trim())\n                    ob.complete()\n                }\n            })\n    \n            this.contentSubscription = this.contentObservable.subscribe((content) => {\n                this.createTyped()\n                this.contentSubscription.unsubscribe()\n            })\n\n            return\n        }\n\n        this.createTyped()\n    }\n\n    ngOnChanges (changes: SimpleChanges) {\n        if (('condition' in changes) && this.typed) {\n            if (this.typingLock) {\n                return\n            }\n\n            if (this.condition) {\n                this.typed.begin()\n                this.typingLock = true\n            }\n        }\n    }\n\n    private checkContent () {\n        return this.elRef.nativeElement.textContent.trim().length > 0\n    }\n\n    private createTyped () {\n        this.typed = new Typed(this.elRef.nativeElement, {\n            typeSpeed: this.typeSpeed,\n            startDelay: this.startDelay,\n            condition: this.condition,\n            hideCursorOnComplete: this.hideCursorOnComplete,\n            onComplete: () => {\n                this.complete.emit(null)\n                this.typingLock = false\n            }\n        })\n\n        if (this.condition) {\n            this.typed.begin()\n            this.typingLock = true\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[typingAnimation]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'typeSpeed': [{ type: Input, args: ['typeSpeed', ] },],\n'startDelay': [{ type: Input, args: ['startDelay', ] },],\n'condition': [{ type: Input, args: ['condition', ] },],\n'hideCursorOnComplete': [{ type: Input, args: ['hideCursorOnComplete', ] },],\n'complete': [{ type: Output, args: ['complete', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}